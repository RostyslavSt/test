#!/usr/bin/env bash

# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
MAILTO=rost.sht@gmail.com

# m h dom mon dow user  command

#-run script only each Tuesday
* * * * 2 /home/rshtets/devOps_projects/study/test_script.sh

#-run script each 30 min from Monday to Friday starting from 10:30
/30 10 * * 1-5 sleep 1800; /home/rshtets/devOps_projects/study/test_script.sh

#-run script only if file /tmp/start.lock exist and stop work and notify user if lock-files absent
*/1 * * * * /home/rshtets/devOps_projects/study/check_file.sh

#-run script one a time only if previous task finished


#-run script only on Friday 13th every month each 15 seconds
* * 13 * 5 sleep 15; /home/rshtets/devOps_projects/study/test_script.sh
* * 13 * 5 sleep 30; /home/rshtets/devOps_projects/study/test_script.sh
* * 13 * 5 sleep 45; /home/rshtets/devOps_projects/study/test_script.sh
* * 13 * 5 sleep 60; /home/rshtets/devOps_projects/study/test_script.sh